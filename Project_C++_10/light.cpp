//============================================================================
// 
// ライト [light.cpp]
// Author : 福田歩希
// 
//============================================================================

//****************************************************
// インクルードファイル
//****************************************************
#include "light.h"
#include "main.h"
#include "manager.h"

//============================================================================
// コンストラクタ
//============================================================================
CLight::CLight()
{
	// ライト情報クリア
	ZeroMemory(&m_light[0], sizeof(D3DLIGHT9));

	//for (int i = 0; i < MAX_LIGHT; i++)
	//{ // ライトの向きクリア
	//	m_tempDirection[i] = { 0.0f, 0.0f, 0.0f };
	//}

	// ライトの向き設定
	m_tempDirection[0] = { 0.2f, -0.8f, 0.4f };
	m_tempDirection[1] = { -0.2f, 0.8f, -0.4f };
	m_tempDirection[2] = { 0.8f, 0.1f, 0.4f };

	// 操作番号リセット
	m_nID = 0;

	// ライト生成
	Create();

	// 初回反映
	SetLight();
}

//============================================================================
// デストラクタ
//============================================================================
CLight::~CLight()
{

}

//============================================================================
// 初期設定
//============================================================================
HRESULT CLight::Init()
{
	return S_OK;
}

//============================================================================
// 更新処理
//============================================================================
void CLight::Update()
{
	// ライトセット
	SetLight();
}

//============================================================================
// ライト生成
//============================================================================
void CLight::Create()
{
	// デバイスを取得
	LPDIRECT3DDEVICE9 pDev = CManager::GetRenderer()->GetDeviece();

	for (int i = 0; i < MAX_LIGHT; i++)
	{ // ライト情報初期設定

		// ライトの種類を設定
		m_light[i].Type = D3DLIGHT_DIRECTIONAL;

		// ライトの拡散光を設定
		m_light[i].Diffuse = D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f);

		// ライトの方向を設定
		m_light[i].Direction = m_tempDirection[i];

		// ライトを有効にする
		pDev->LightEnable(i, TRUE);
	}
}

//============================================================================
// ライトセット
//============================================================================
void CLight::SetLight()
{
	// デバイスを取得
	LPDIRECT3DDEVICE9 pDev = CManager::GetRenderer()->GetDeviece();

	for (int i = 0; i < MAX_LIGHT; i++)
	{
		// ベクトルをコピー
		D3DXVECTOR3 vecDir = m_light[i].Direction;

		// ベクトルを正規化
		D3DXVec3Normalize(&vecDir, &vecDir);

		// 正規化ベクトルを反映
		m_light[i].Direction = vecDir;

		// ライトを設定する
		pDev->SetLight(i, &m_light[i]);
	}
}