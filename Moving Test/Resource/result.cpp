//============================================================================
// 
// リザルト [result.cpp]
// Author : 福田歩希
// 
//============================================================================

//****************************************************
// インクルードファイル
//****************************************************
#include "result.h"
#include "manager.h"
#include "object.h"

// オブジェクト生成用
#include "block.h"
#include "player.h"

//============================================================================
// コンストラクタ
//============================================================================
CResult::CResult()
{

}

//============================================================================
// デストラクタ
//============================================================================
CResult::~CResult()
{

}

//============================================================================
// 初期設定
//============================================================================
HRESULT CResult::Init()
{
	for (int i = 0; i < 5; i++)
	{
		// ブロックの生成 (仮)
		CBlock::Create(
			{ SCREEN_WIDTH * 0.95f, SCREEN_HEIGHT * 0.9f + (-70.0f * i), 0.0f },	// 中心位置
			{ 30.0f, 30.0f, 0.0f });												// サイズ

		// ブロックの生成 (仮)
		CBlock::Create(
			{ SCREEN_WIDTH * 0.95f + (-70.0f * i), SCREEN_HEIGHT * 0.9f, 0.0f },	// 中心位置
			{ 30.0f, 30.0f, 0.0f });												// サイズ
	}

	return S_OK;
}

//============================================================================
// 終了処理
//============================================================================
void CResult::Uninit()
{
	// 基底クラスの終了処理
	CScene::Uninit();
}

//============================================================================
// 更新処理
//============================================================================
void CResult::Update()
{
	if (CManager::GetKeyboard()->GetTrigger(DIK_RETURN))
	{
		CManager::SetScene(MODE::TITLE);
	}
}

//============================================================================
// 描画処理
//============================================================================
void CResult::Draw()
{

}