//============================================================================
// 
// 数字 [number.cpp]
// Author : 福田歩希
// 
//============================================================================

//****************************************************
// インクルードファイル
//****************************************************
#include "number.h"
#include "utility.h"

// テクスチャ設定用
#include "texture_manager.h"

//============================================================================
// デフォルトコンストラクタ
//============================================================================
CNumber::CNumber() : 
	CObject_UI{ static_cast<int>(LAYER::UI) },	// 描画優先度の指定
	m_nNum{ 0 }									// 数字の割り当て
{

}

//============================================================================
// デストラクタ
//============================================================================
CNumber::~CNumber()
{

}

//============================================================================
// 初期設定
//============================================================================
HRESULT CNumber::Init()
{
	// 基底クラスの初期設定
	HRESULT hr = CObject_UI::Init();

	return hr;
}

//============================================================================
// 終了処理
//============================================================================
void CNumber::Uninit()
{
	// 基底クラスの終了処理
	CObject_UI::Uninit();
}

//============================================================================
// 更新処理
//============================================================================
void CNumber::Update()
{
	// アニメーション
	Animation();

	// 基底クラスの更新
	CObject_UI::Update();
}

//============================================================================
// 描画処理
//============================================================================
void CNumber::Draw()
{
	// 基底クラスの描画処理
	CObject_UI::Draw();
}

//============================================================================
// 生成
//============================================================================
CNumber* CNumber::Create()
{
	// インスタンスを生成
	CNumber* pNumber = DBG_NEW CNumber;

	if (pNumber == nullptr)
	{ // 生成失敗
		assert(false);
	}

	// タイプを設定
	pNumber->SetType(TYPE::NONE);

	// 初期設定
	pNumber->Init();

	// ランダムな座標
	D3DXVECTOR3 pos{ (SCREEN_WIDTH * 0.5f) + CUtility::GetInstance()->GetRandomValue<float>() * 5.0f, (SCREEN_HEIGHT * 0.5f) + CUtility::GetInstance()->GetRandomValue<float>() * 5.0f, 0.0f };

	// 位置の設定
	pNumber->SetPos(pos);

	// サイズの設定
	//pNumber->SetSize({ 0.0f, 0.0f, 0.0f });

	// アルファ値の設定
	pNumber->SetAlpha(0.0f);

	// 横テクスチャ分割幅
	pNumber->SetTexWidth(0.1f);

	// 縦テクスチャ分縦幅
	pNumber->SetTexHeight(1.0f);

	// テクスチャを設定
	pNumber->BindTex(CTexture_Manager::GetInstance()->GetTexture(CTexture_Manager::TYPE::NUMBER_00));

	return pNumber;
}

//============================================================================
// 生成
//============================================================================
CNumber* CNumber::Create(D3DXVECTOR3 pos, D3DXVECTOR3 size)
{
	// インスタンスを生成
	CNumber* pNumber = DBG_NEW CNumber;

	if (pNumber == nullptr)
	{ // 生成失敗
		assert(false);
	}

	// タイプを設定
	pNumber->SetType(TYPE::NONE);

	// 初期設定
	pNumber->Init();

	// 位置の設定
	pNumber->SetPos(pos);

	// サイズの設定
	pNumber->SetSize(size);

	// 横テクスチャ分割幅
	pNumber->SetTexWidth(0.1f);

	// 縦テクスチャ分縦幅
	pNumber->SetTexHeight(1.0f);

	// テクスチャを設定
	pNumber->BindTex(CTexture_Manager::GetInstance()->GetTexture(CTexture_Manager::TYPE::NUMBER_00));

	return pNumber;
}

//============================================================================
// 数字を設定
//============================================================================
void CNumber::SetNumber(int nNum)
{
	m_nNum = nNum;
}

//============================================================================
// アニメーション
//============================================================================
void CNumber::Animation()
{
	// 横テクスチャ種類情報取得
	int nTexPatternU = GetNowPatternU();

	// 横テクスチャ種類を割り当て
	nTexPatternU = m_nNum;

	// 横テクスチャ種類情報設定
	SetNowPatternU(nTexPatternU);
}