//============================================================================
// 
// チャレンジ [challenge.cpp]
// Author : 福田歩希
// 
//============================================================================

//****************************************************
// インクルードファイル
//****************************************************
#include "challenge.h"
#include "game_manager.h"
#include "stagemaker.h"
#include "fakescreen.h"

// インプット取得用
#include "manager.h"

//============================================================================
// デフォルトコンストラクタ
//============================================================================
CChallenge::CChallenge()
{

}

//============================================================================
// デストラクタ
//============================================================================
CChallenge::~CChallenge()
{

}

//============================================================================
// 初期設定
//============================================================================
HRESULT CChallenge::Init()
{
	// ゲームマネージャーの初期設定
	CGameManager::GetInstance()->Init(CGameManager::PHASE::C_START);

	return S_OK;
}

//============================================================================
// 終了処理
//============================================================================
void CChallenge::Uninit()
{
	// ステージメーカーの解放
	CStageMaker::GetInstance()->Release();

	// ゲームマネージャーの解放
	CGameManager::GetInstance()->Release();

	// 基底クラスの終了処理
	CScene::Uninit();
}

//============================================================================
// 更新処理
//============================================================================
void CChallenge::Update()
{
	// ゲームマネージャーの更新処理
	CGameManager::GetInstance()->Update();

#ifdef _DEBUG
	if (CManager::GetKeyboard()->GetTrigger(DIK_DELETE))
	{
		// タイトル画面へ
		CFakeScreen::GetInstance()->SetFade(MODE::TITLE);
	}
#endif	// _DEBUG
}

//============================================================================
// 描画処理
//============================================================================
void CChallenge::Draw()
{

}