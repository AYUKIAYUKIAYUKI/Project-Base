//============================================================================
// 
// モニター [monitor.cpp]
// Author : 福田歩希
// 
//============================================================================

//****************************************************
// インクルードファイル
//****************************************************
#include "monitor.h"

// モニター画面描画用
//#include "fakescreen.h"
#include "renderer.h"

//============================================================================
// デフォルトコンストラクタ
//============================================================================
CMonitor::CMonitor() :
	CObject_X{ static_cast<int>(LAYER::BG) }	// 描画優先度を指定
{

}

//============================================================================
// デストラクタ
//============================================================================
CMonitor::~CMonitor()
{

}

//============================================================================
// 初期設定
//============================================================================
HRESULT CMonitor::Init()
{
	// 基底クラスの初期設定
	HRESULT hr = CObject_X::Init();

	// モデルを取得
	auto model = CModel_X_Manager::GetInstance()->GetModel(CModel_X_Manager::TYPE::MONITOR);

	// モニターの画面部分に疑似スクリーンを描画する
	//model->ppTex[1] = CFakeScreen::GetInstance()->GetTexture();
	model->ppTex[1] = CRenderer::GetInstance()->GetTexture();

	return hr;
}

//============================================================================
// 終了処理
//============================================================================
void CMonitor::Uninit()
{
	// 基底クラスの終了処理
	CObject_X::Uninit();
}

//============================================================================
// 更新処理
//============================================================================
void CMonitor::Update()
{
	// 基底クラスの更新
	CObject_X::Update();
}

//============================================================================
// 描画処理
//============================================================================
void CMonitor::Draw()
{
	// 基底クラスの描画処理
	CObject_X::Draw();
}

//============================================================================
// 生成
//============================================================================
CMonitor* CMonitor::Create(D3DXVECTOR3 pos)
{
	// インスタンスを生成
	CMonitor* pMonitor = DBG_NEW CMonitor;

	if (pMonitor == nullptr)
	{ // 生成失敗
		assert(false);
	}

	// タイプを設定
	pMonitor->SetType(TYPE::NONE);

	// 基底クラスの初期設定
	pMonitor->Init();

	// 座標の設定
	pMonitor->SetPos(pos);

	// モデルを取得
	auto model = CModel_X_Manager::GetInstance()->GetModel(CModel_X_Manager::TYPE::MONITOR);

	// モデルを設定
	pMonitor->BindModel(model);

	// サイズを設定
	pMonitor->SetSize(model->size);

	// 描画される前に一度更新しておく
	pMonitor->Update();

	return pMonitor;
}