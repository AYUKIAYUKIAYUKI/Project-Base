//============================================================================
// 
// UIオブジェクト管理 [object_UI.h]
// Author : 福田歩希
// 
//============================================================================

//****************************************************
// インクルードファイル
//****************************************************
#include "object_UI.h"

//============================================================================
// デフォルトコンストラクタ
//============================================================================
CObject_UI::CObject_UI() :
	CObject_2D(static_cast<int>(CObject::LAYER::UI)),
	m_bAppear{ false },
	m_bDisappear{ false },
	m_posTarget{ 0.0f, 0.0f, 0.0f },
	m_rotTarget{ 0.0f, 0.0f, 0.0f },
	m_sizeTarget{ 50.0f, 0.0f, 0.0f },
	m_colTarget{ 1.0f, 1.0f, 1.0f, 1.0f }
{

}

//============================================================================
// 描画優先度指定コンストラクタ
//============================================================================
CObject_UI::CObject_UI(int nPriority) :
	CObject_2D(nPriority),
	m_bAppear{ false },
	m_bDisappear{ false },
	m_posTarget{ 0.0f, 0.0f, 0.0f },
	m_rotTarget{ 0.0f, 0.0f, 0.0f },
	m_sizeTarget{ 0.0f, 0.0f, 0.0f },
	m_colTarget{ 1.0f, 1.0f, 1.0f, 1.0f }
{

}

//============================================================================
// デストラクタ
//============================================================================
CObject_UI::~CObject_UI()
{

}

//============================================================================
// 初期設定
//============================================================================
HRESULT CObject_UI::Init()
{
	// 基底クラスの初期設定
	HRESULT hr = CObject_2D::Init();

	return hr;
}

//============================================================================
// 終了処理
//============================================================================
void CObject_UI::Uninit()
{
	// 基底クラスの終了処理
	CObject_2D::Uninit();
}

//============================================================================
// 更新処理
//============================================================================
void CObject_UI::Update()
{
	// 出現
	Appear();

	// 消滅
	Disappear();

	// 目標へ補正
	AdjustToTarget();

	// 基底クラスの更新処理
	CObject_2D::Update();
}

//============================================================================
// 描画処理
//============================================================================
void CObject_UI::Draw()
{
	// 基底クラスの描画処理
	CObject_2D::Draw();
}

//============================================================================
// 出現フラグ取得
//============================================================================
bool CObject_UI::GetAppear()
{
	return m_bAppear;
}

//============================================================================
// 出現フラグ設定
//============================================================================
void CObject_UI::SetAppear(bool bAppear)
{
	m_bAppear = bAppear;
}

//============================================================================
// 消滅フラグ取得
//============================================================================
bool CObject_UI::GetDisappear()
{
	return m_bDisappear;
}

///============================================================================
// 消滅フラグ設定
//============================================================================
void CObject_UI::SetDisappear(bool bDisappear)
{
	m_bDisappear = bDisappear;
}

//============================================================================
// 目標座標取得
//============================================================================
D3DXVECTOR3 CObject_UI::GetPosTarget()
{
	return m_posTarget;
}

//============================================================================
// 目標座標設定
//============================================================================
void CObject_UI::SetPosTarget(D3DXVECTOR3 posTarget)
{
	m_posTarget = posTarget;
}

//============================================================================
// 目標向き取得
//============================================================================
D3DXVECTOR3 CObject_UI::GetRotTarget()
{
	return m_rotTarget;
}

//============================================================================
// 目標向き設定
//============================================================================
void CObject_UI::SetRotTarget(D3DXVECTOR3 rotTarget)
{
	m_rotTarget = rotTarget;
}

//============================================================================
// 目標サイズ取得
//============================================================================
D3DXVECTOR3 CObject_UI::GetSizeTarget()
{
	return m_sizeTarget;
}

//============================================================================
// 目標サイズ設定
//============================================================================
void CObject_UI::SetSizeTarget(D3DXVECTOR3 sizeTarget)
{
	m_sizeTarget = sizeTarget;
}

//============================================================================
// 目標色取得
//============================================================================
D3DXCOLOR CObject_UI::GetColTarget()
{
	return m_colTarget;
}

//============================================================================
// 目標色設定
//============================================================================
void CObject_UI::SetColTarget(D3DXCOLOR colTarget)
{
	m_colTarget = colTarget;
}

//============================================================================
// 出現
//============================================================================
void CObject_UI::Appear()
{
	if (!m_bAppear)
	{
		return;
	}

	// アルファ値を取得
	float& fAlpha{ GetAlpha() };

	// 徐々に登場
	fAlpha += 0.025f;

	// 最大値に到達で固定
	if (fAlpha > 1.0f)
	{
		fAlpha = 1.0f;

		// 出現終了
		m_bAppear = false;
	}
}

//============================================================================
// 消滅
//============================================================================
void CObject_UI::Disappear()
{
	if (!m_bDisappear)
	{
		return;
	}

	// アルファ値を取得
	float& fAlpha{ GetAlpha() };

	// 徐々に消滅
	fAlpha += -0.05f;

	// 最低値に到達で固定
	if (fAlpha < 0.0f)
	{
		fAlpha = 0.0f;

		// 出現終了
		m_bDisappear = false;

		// 破棄予約
		SetRelease();
	}
}

//============================================================================
// 目標へ補正
//============================================================================
void CObject_UI::AdjustToTarget(float fCoeff)
{
	// 目標座標へ迫る
	D3DXVECTOR3 pos{ GetPos() };
	pos += (m_posTarget - pos) * 0.05f;
	SetPos(pos);

	// 目標向きへ迫る
	D3DXVECTOR3 rot{ GetRot() };
	rot += (m_rotTarget - rot) * 0.05f;
	SetRot(rot);

	// 目標サイズへ迫る
	D3DXVECTOR3 size{ GetSize() };
	size += (m_sizeTarget - size) * 0.05f;
	SetSize(size);

	// 目標色へ迫る
	if (!m_bAppear && !m_bDisappear)
	{
		D3DXCOLOR col{ GetCol() };
		col += (m_colTarget - col) * 0.05f;
		SetCol(col);
	}
}