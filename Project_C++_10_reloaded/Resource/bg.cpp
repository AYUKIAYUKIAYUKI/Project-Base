//============================================================================
// 
// 背景 [bg.cpp]
// Author : 福田歩希
// 
//============================================================================

//****************************************************
// インクルードファイル
//****************************************************
#include "bg.h"
#include "manager.h"

//============================================================================
// コンストラクタ
//============================================================================
CBg::CBg() : CObject_2D(static_cast<int>(LAYER::BACK))
{
	m_nCntPAKU = 0;		// パクパク回数
	m_nDelayPAKU = 0;	// パクパク遅延
}

//============================================================================
// デストラクタ
//============================================================================
CBg::~CBg()
{

}

//============================================================================
// 初期設定
//============================================================================
HRESULT CBg::Init()
{
	// 基底クラスの初期設定
	HRESULT hr = CObject_2D::Init();

	return hr;
}

//============================================================================
// 終了処理
//============================================================================
void CBg::Uninit()
{
	// 基底クラスの終了処理
	CObject_2D::Uninit();
}

//============================================================================
// 更新処理
//============================================================================
void CBg::Update()
{
	// パクパクします
	PAKUPAKU();

	// 基底クラスの更新
	CObject_2D::Update();
}

//============================================================================
// 描画処理
//============================================================================
void CBg::Draw()
{
	// 基底クラスの描画処理
	CObject_2D::Draw();
}

//============================================================================
// 生成
//============================================================================
CBg* CBg::Create(D3DXVECTOR3 pos, D3DXVECTOR3 size)
{
	// インスタンスを生成
	CBg* pBg = DBG_NEW CBg;

	if (pBg == nullptr)
	{ // 生成失敗
		assert(false);
	}

	pBg->SetType(TYPE::NONE);	// タイプを設定

	pBg->Init();		// 基底クラスの初期設定
	pBg->SetPos(pos);	// 位置の設定
	pBg->SetSize(size);	// サイズの設定

	// テクスチャを設定
	pBg->BindTex(CManager::GetRenderer()->GetTextureInstane()->GetTexture(CTexture::TEX_TYPE::BG_000));

	return pBg;
}

//============================================================================
// パクパクします
//============================================================================
void CBg::PAKUPAKU()
{
	m_nDelayPAKU++;

	if (m_nCntPAKU <= 0)
	{
		if (m_nDelayPAKU >= 140)
		{
			BindTex(CManager::GetRenderer()->GetTextureInstane()->GetTexture(CTexture::TEX_TYPE::BG_000));

			m_nCntPAKU++;

			m_nDelayPAKU = 0;
		}
		if (m_nDelayPAKU >= 120)
		{
			BindTex(CManager::GetRenderer()->GetTextureInstane()->GetTexture(CTexture::TEX_TYPE::BG_001));
		}
	}
	else
	{
		if (m_nDelayPAKU >= 40)
		{
			BindTex(CManager::GetRenderer()->GetTextureInstane()->GetTexture(CTexture::TEX_TYPE::BG_000));

			m_nCntPAKU++;

			m_nDelayPAKU = 0;

			if (m_nCntPAKU >= 4)
			{
				m_nCntPAKU = 0;
			}
		}
		if (m_nDelayPAKU >= 20)
		{
			BindTex(CManager::CManager::GetRenderer()->GetTextureInstane()->GetTexture(CTexture::TEX_TYPE::BG_001));
		}
	}
}